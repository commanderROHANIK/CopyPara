@page "/patients/create"
@rendermode InteractiveServer
@attribute [Authorize]

@using CopyPara.Domain.Patients.Enums
@using Microsoft.AspNetCore.Authorization
@using CopyPara.Application.Room.AddPatientToRoom
@using CopyPara.Domain.Patients
@using MediatR
@using CopyPara.Application.Patient.Create
@inject ISender Sender

<h1>Create New Patient</h1>

<EditForm FormName="createPatientForm" Model="@Patient" OnSubmit="@CreatePatient">
    <div>
        <FluentLabel for="name">Name:</FluentLabel>
        <FluentTextField id="name" @bind-Value=Patient.Name></FluentTextField>
        <FluentRadioGroup Name="sex" @bind-Value=Patient.Sex Label="Sex">
            <FluentRadio Value=@("Male")>Male</FluentRadio>
            <FluentRadio Value=@("Female")>Female</FluentRadio>
        </FluentRadioGroup>
        <FluentSelect TOption="Condition"
                      Items="conditions"
                      Label="Condition"
                      OptionValue="@(c => c.ToString())"
                      OptionText="@(c => c.ToString())"
                      @bind-SelectedOption="@Patient.Condition" />
        <FluentRadioGroup Name="numbers" @bind-Value=IsInpatient Label="Status">
            <FluentRadio Value=@(true)>Inpatient</FluentRadio>
            <FluentRadio Value=@(false)>Not inpatient</FluentRadio>
        </FluentRadioGroup>
    </div>
    <FluentButton Type="ButtonType.Submit" Appearance="@Appearance.Accent">Create Patient</FluentButton>
</EditForm>
@code {
    public Domain.Patients.Patient Patient { get; set; }
    public bool IsInpatient { get; set; }
    private IEnumerable<Condition> conditions;

    protected override void OnInitialized() 
    { 
        Patient ??= new();
        conditions = new List<Condition>(3) { Condition.Disabled, Condition.Wheelchair, Condition.Walking };
    }

    private async Task CreatePatient()
    {
        ulong id = await Sender.Send(new CreatePatientRequest() { Name = Patient.Name, Condition = Patient.Condition, Sex = Patient.Sex });

        await Sender.Send(new AddPatientToRoomRequest() { PatientId = id });
    }
}
